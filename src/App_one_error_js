import React,{ useState, useEffect } from 'react'
import { ethers, BrowserProvider } from "ethers";
import { providers } from 'ethers/providers';
import ColorAbi from './contractsData/Color.json'
import ColorAddress from './contractsData/Color-address.json'

//import Color from './Color.json'

function App() {
  const [provider, setProvider] = useState(null);
  const [signer, setSigner] = useState(null);
  const [contract, setContract] = useState(null);
  const [result, setResult] = useState("");
  const [wager, setWager] = useState("");
  const [display, setDisplay] = useState("");
  const [guess, setGuess] = useState(true); // true for higher, false for lower
  const [playerSessions, setPlayerSessions] = useState([]);

  useEffect(() => {
     // Connect to Ethereum
    const initialize = async () => {
    const web3Provider = new ethers.JsonRpcProvider("http://ec2-44-252-73-2.us-west-2.compute.amazonaws.com:8545");
    //const web3Provider = new BrowserProvider(window.ethereum);
    setProvider(web3Provider);
    const signer = await web3Provider.getSigner(0);
    setSigner(signer);
    const ColorContract = new ethers.Contract(ColorAddress.address, ColorAbi.abi, signer);
    setContract(ColorContract);

   const totalSupply = await contract.totalSupply().call()
   this.setState({ totalSupply })
      // Load Colors
   for (var i = 1; i <= totalSupply; i++) {
      const color = await contract.colors(i - 1).call()
      this.setState({
        colors: [...this.state.colors, color]
      })
   }
    };
    initialize();
  }, [ColorAddress, ColorAbi]);

 const  mint = async  (color) => {


      this.state.contract.mint(color).send({ from: this.state.account, gas: 3000000}).once('receipt', (receipt) => {
      this.setState({
        colors: [...this.state.colors, color]
      })
    })
  }

    return (
      <div>
        <nav className="navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0
shadow">
          <a
            className="navbar-brand col-sm-3 col-md-2 mr-0"
            target="_blank"
            rel="noopener noreferrer"
          >
            Color Tokens
          </a>
          <ul className="navbar-nav px-3">
          </ul>
        </nav>
        <div className="container-fluid mt-5">
          <div className="row">
            <main role="main" className="col-lg-12 d-flex text-center">
              <div className="content mr-auto ml-auto">
                <h1>Issue Token</h1>
                <form onSubmit={(event) => {
                  event.preventDefault()
                  const color = this.color.value
                  this.mint(color)
                }}>
                  <input
                    type='text'
                    className='form-control mb-1'
                    placeholder='e.g. #FFFFFF'
                    ref={(input) => { this.color = input }}
                  />
         <input
                    type='submit'
                    className='btn btn-block btn-primary'
                    value='MINT'
                  />
                </form>
              </div>
            </main>
          </div>
          <hr/>
          <div className="row text-center">
            { this.state.colors.map((color, key) => {
              return(
                <div key={key} className="col-md-3 mb-3">
                  <div className="token" style={{ backgroundColor: color }}></div>
                  <div>{color}</div>
                </div>
              )
            })}
          </div>
        </div>
      </div>
    );
  }


export default App;

